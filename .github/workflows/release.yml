name: Build Godot Release Template

on:
  push:
    tags:
        - 'v*'
jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      godot_version: ${{ steps.godot_version.outputs.content }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Install Deps
      uses: awalsh128/cache-apt-pkgs-action@latest
      with:
        packages: clang libsdl2-dev scons libpng-dev
        version: 1.0
    - name: Read godot version
      id: godot_version
      uses: juliangruber/read-file-action@v1
      with:
        path: ./godot_version.txt
    - name: Install Godot
      run: |
        export GODOT_VERSION=$(echo "${{ steps.godot_version.outputs.content }}"|tr -d '\n')
        wget https://downloads.tuxfamily.org/godotengine/"$GODOT_VERSION"/Godot_v"$GODOT_VERSION"-stable_linux.x86_64.zip
        unzip Godot_v"$GODOT_VERSION"-stable_linux.x86_64.zip
        chmod +x Godot_v"$GODOT_VERSION"-stable_linux.x86_64
        rm Godot_v"$GODOT_VERSION"-stable_linux.x86_64.zip
        mv Godot_v"$GODOT_VERSION"-stable_linux.x86_64 /usr/local/bin/godot
      shell: bash
    - name: Build
      run: ./build.sh
    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: linux_release.x86_64
        path: ./linux_release.x86_64
  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Download Artifacts
      uses: actions/download-artifact@v3
      with:
        name: linux_release.x86_64
        path: ./
    - name: Create Release
      uses: softprops/action-gh-release@v0.1.15
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }} - Godot ${{ needs.build.outputs.godot_version }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            linux_release.x86_64
            godot_version.txt
